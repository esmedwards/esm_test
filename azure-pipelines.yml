# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: Default
  demands: agent.os -equals Linux

steps:
  - task: Docker@2
    displayName: Build image
    inputs:
      repository: 'test-docker'
      command: build
      Dockerfile: Dockerfile
  
  - task: CmdLine@2
    displayName: 'Build image'
    inputs:
      script: docker build -t test-docker:$(Build.BuildId) --disable-content-trust=true $(System.DefaultWorkingDirectory)/

  - task: CmdLine@2
    displayName: Content Trust Sign and Push
    inputs:
      script: |
        mkdir -p ~/.docker/trust/private2
        /home/esmerald/Downloads/ssm/smctl certificate download --keypair-alias "Code_Sign_Watchdog"
        # echo $(acr-frompipeline-signing-key) | base64 --decode > ~/.docker/trust/private/delegate.key
        # chmod 400 ~/.docker/trust/private/delegate.key
        # export DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE=$(repository-passphrase)
        # docker trust key load ~/.docker/trust/private/delegate.key --name delegationkey 
        # export DOCKER_CONTENT_TRUST=1
        # docker trust sign $(acrName)/$(imageRepository):$(tag)
        # docker trust inspect --pretty $(acrName)/$(imageRepository):$(tag)

  # - task: CmdLine@2
  #   displayName: 'Docker Sign and Push'
  #   inputs:
  #     script: |
  #       docker tag test-docker:$(Build.BuildId) localhost:5000/test-docker:latest 
  #       docker push test-docker:$(Build.BuildId) 
  #       docker push localhost:5000/test-docker:latest 

  # - task: CmdLine@2
  #   displayName: 'Docker Verify'
  #   inputs:
  #     script: |
  #       docker image rm test-docker:$(Build.BuildId) 
  #       docker image rm test-docker:latest 
  #       docker pull localhost:5000/test-docker:$(Build.BuildId) 
  #       docker pull localhost:5000/test-docker

  # - script: |
  #     python -m pip install --upgrade pip
  #     pip install -r requirements.txt
  #   displayName: 'Install dependencies'

  # - script: |
  #     pip install pytest pytest-azurepipelines
  #     pytest
  #   displayName: 'pytest'
